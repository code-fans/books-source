简单计数排序法是一种不稳定的排序方法，改进的稳定计数排序法可以保证具有相同值的元素在排序序列的相对次序与初始时的次序相同，即初始时先出现的，在排序序列中也位于前面。
其基本思想是对每一个输入元素x，确定出小于x的元素个数，有了这一信息，就可以把x直接放在它在最终输出数组中的位置上。如有12个元素小于x，则x就属于第13个输出位置。对于相同元素，要稍做修改以防冲突。
参考程序如下所示。
//改进的计数排序法 
#include <bits/stdc++.h>
using namespace std;
#define N 500000

int a[N];                                  //a[]为初始的乱序数组
int b[N];                                  //b[]存放最后排序结果
int c[N];                                  //c[]为辅助数组 

int main()
{
  int n,MAX=0;
  scanf("%d",&n);
  for(int i=1;i<=n;i++)                    //统计 
  {
    scanf("%d",&a[i]); 
    c[a[i]]++; 
    if(MAX<a[i])
      MAX=a[i];                            //找出最大的数 
  }  
  for(int i=1;i<=MAX;i++)//找出比该数大的数有多少个，即找出该数的最终放置位置 
    c[i]+=c[i-1];
  for(int i=n;i>=1;i--)  //将a中的数逆序放入b数组的应放的位置，思考为何逆序 
  {
    b[c[a[i]]]=a[i];     //注意这里用初始乱序数组a[]依次排位
    c[a[i]]--;           //该数放置的位置前移了一位，如有相同数，则不会冲突 
  } 
  for(int i=1;i<=n;i++)
    printf("%d ",b[i]); 
  return 0;
}
